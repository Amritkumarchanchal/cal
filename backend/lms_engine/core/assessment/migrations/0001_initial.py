# Generated by Django 5.1.6 on 2025-02-12 03:57

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Assessment",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "question_visibility_limit",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                (
                    "time_limit",
                    models.IntegerField(
                        help_text="Time limit in seconds",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3600),
                        ],
                    ),
                ),
                ("sequence", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DescriptiveSolution",
            fields=[
                ("solution_explanation", models.TextField(max_length=1000)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("model_solution", models.TextField(max_length=1000)),
                (
                    "max_word_limit",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum allowed word count for the answer. Leave blank if unlimited.",
                        null=True,
                    ),
                ),
                (
                    "min_word_limit",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Minimum required word count for the answer. Leave blank if no minimum.",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MCQSolution",
            fields=[
                ("solution_explanation", models.TextField(max_length=1000)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MSQSolution",
            fields=[
                ("solution_explanation", models.TextField(max_length=1000)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NATSolution",
            fields=[
                ("solution_explanation", models.TextField(max_length=1000)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("value", models.FloatField()),
                ("tolerance_max", models.FloatField()),
                ("tolerance_min", models.FloatField()),
                ("decimal_precision", models.PositiveIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "text",
                    models.TextField(help_text="The question text.", max_length=1000),
                ),
                (
                    "hint",
                    models.TextField(
                        blank=True,
                        help_text="A hint to help the student.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("MCQ", "Multiple Choice Question"),
                            ("MSQ", "Multiple Select Question"),
                            ("NAT", "Numerical Answer Type"),
                            ("DESC", "Descriptive Question"),
                        ],
                        help_text="The type of question.",
                        max_length=10,
                    ),
                ),
                (
                    "partial_marking",
                    models.BooleanField(
                        default=False,
                        help_text="Enable partial marking for the question.",
                        null=True,
                    ),
                ),
                (
                    "marks",
                    models.IntegerField(
                        help_text="The maximum marks for the question.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QuestionOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("option_text", models.TextField(max_length=255)),
            ],
        ),
    ]
